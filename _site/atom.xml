<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>AJS</title>
 <link href="http://slapula.github.io/atom.xml" rel="self"/>
 <link href="http://slapula.github.io/"/>
 <updated>2016-11-28T15:59:01-06:00</updated>
 <id>http://slapula.github.io</id>
 <author>
   <name>Aaron Smith</name>
   <email></email>
 </author>

 
 <entry>
   <title>Describing Instances in AWS and JMESpath</title>
   <link href="http://slapula.github.io/2016/07/29/Describing-Instances-in-AWS-and-JMESpath/"/>
   <updated>2016-07-29T00:00:00-05:00</updated>
   <id>http://slapula.github.io/2016/07/29/Describing-Instances-in-AWS-and-JMESpath</id>
   <content type="html">&lt;p&gt;Now that I’m digging into AWS for my new job, I’ve been up to my neck in JSON.  I wouldn’t say I’m annoyed yet but trying to search and grab data from Describe outputs is becoming a hassle. Enter &lt;a href=&quot;http://jmespath.org/&quot;&gt;JMESpath&lt;/a&gt;.  JMESpath is the scalpel to use when you need to surgically remove key bits of data from large JSON outputs. For the following example, I will be using data generated using &lt;a href=&quot;http://json-generator.com&quot;&gt;JSON-Generator&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;simple-extraction&quot;&gt;Simple Extraction&lt;/h3&gt;

&lt;p&gt;Here is a simple example in the Python console where I am loading the JSON data then extracting names:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-p&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import jmespath
&amp;gt;&amp;gt;&amp;gt; from subprocess import call
&amp;gt;&amp;gt;&amp;gt; call([&quot;head&quot;, &quot;-15&quot;, &quot;random_stuff.json&quot;])
[
  {
    &quot;id&quot;: &quot;579f8628aaef83cbbbf73384&quot;,
    &quot;index&quot;: 0,
    &quot;guid&quot;: &quot;5c739ce1-a555-4578-a611-3cf679001564&quot;,
    &quot;isActive&quot;: true,
    &quot;balance&quot;: &quot;$3,747.11&quot;,
    &quot;picture&quot;: &quot;http://placehold.it/32x32&quot;,
    &quot;age&quot;: 34,
    &quot;eyeColor&quot;: &quot;blue&quot;,
    &quot;name&quot;: {
      &quot;first&quot;: &quot;Cornelia&quot;,
      &quot;last&quot;: &quot;Edwards&quot;
    },
    &quot;company&quot;: &quot;MEGALL&quot;,
0
&amp;gt;&amp;gt;&amp;gt; fileobj = open(&#39;random_stuff.json&#39;, &#39;r&#39;)
&amp;gt;&amp;gt;&amp;gt; import json
&amp;gt;&amp;gt;&amp;gt; rando_json = json.load(fileobj)
&amp;gt;&amp;gt;&amp;gt; jmespath.search(&quot;[0].name.first&quot;, rando_json)
u&#39;Cornelia&#39;
&amp;gt;&amp;gt;&amp;gt; jmespath.search(&quot;[].name.first&quot;, rando_json)
[u&#39;Cornelia&#39;, u&#39;Fern&#39;, u&#39;Reyna&#39;, u&#39;Thomas&#39;, u&#39;Delacruz&#39;, u&#39;Clayton&#39;, u&#39;Nola&#39;]
&amp;gt;&amp;gt;&amp;gt; jmespath.search(&quot;[].name.[first,last]&quot;, rando_json)
[[u&#39;Cornelia&#39;, u&#39;Edwards&#39;], [u&#39;Fern&#39;, u&#39;Fisher&#39;], [u&#39;Reyna&#39;, u&#39;Crawford&#39;], [u&#39;Thomas&#39;, u&#39;Sims&#39;], [u&#39;Delacruz&#39;, u&#39;Owens&#39;], [u&#39;Clayton&#39;, u&#39;Robertson&#39;], [u&#39;Nola&#39;, u&#39;Lott&#39;]]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;going-further&quot;&gt;Going further&lt;/h3&gt;

&lt;p&gt;If you are new to JMESpath (like I am), I highly recommend going through the official &lt;a href=&quot;http://jmespath.org/tutorial.html&quot;&gt;tutorial&lt;/a&gt; just to get familiar with how the language works.  It’s pretty simple to get started and shouldn’t take you too much time to get comfortable with.  One thing I’m learning is that your experience with JMESpath will only really depend on the quality of JSON you are digging through.  Luckily, AWS is okay in that regard.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Introducing Hyde</title>
   <link href="http://slapula.github.io/2013/12/28/introducing-hyde/"/>
   <updated>2013-12-28T00:00:00-06:00</updated>
   <id>http://slapula.github.io/2013/12/28/introducing-hyde</id>
   <content type="html">&lt;p&gt;Hyde is a brazen two-column &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; theme that pairs a prominent sidebar with uncomplicated content. It’s based on &lt;a href=&quot;http://getpoole.com&quot;&gt;Poole&lt;/a&gt;, the Jekyll butler.&lt;/p&gt;

&lt;h3 id=&quot;built-on-poole&quot;&gt;Built on Poole&lt;/h3&gt;

&lt;p&gt;Poole is the Jekyll Butler, serving as an upstanding and effective foundation for Jekyll themes by &lt;a href=&quot;https://twitter.com/mdo&quot;&gt;@mdo&lt;/a&gt;. Poole, and every theme built on it (like Hyde here) includes the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Complete Jekyll setup included (layouts, config, &lt;a href=&quot;/404&quot;&gt;404&lt;/a&gt;, &lt;a href=&quot;/atom.xml&quot;&gt;RSS feed&lt;/a&gt;, posts, and &lt;a href=&quot;/about&quot;&gt;example page&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Mobile friendly design and development&lt;/li&gt;
  &lt;li&gt;Easily scalable text and component sizing with &lt;code class=&quot;highlighter-rouge&quot;&gt;rem&lt;/code&gt; units in the CSS&lt;/li&gt;
  &lt;li&gt;Support for a wide gamut of HTML elements&lt;/li&gt;
  &lt;li&gt;Related posts (time-based, because Jekyll) below each post&lt;/li&gt;
  &lt;li&gt;Syntax highlighting, courtesy Pygments (the Python-based code snippet highlighter)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;hyde-features&quot;&gt;Hyde features&lt;/h3&gt;

&lt;p&gt;In addition to the features of Poole, Hyde adds the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sidebar includes support for textual modules and a dynamically generated navigation with active link support&lt;/li&gt;
  &lt;li&gt;Two orientations for content and sidebar, default (left sidebar) and &lt;a href=&quot;https://github.com/poole/lanyon#reverse-layout&quot;&gt;reverse&lt;/a&gt; (right sidebar), available via &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; classes&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/poole/hyde#themes&quot;&gt;Eight optional color schemes&lt;/a&gt;, available via &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; classes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/poole/hyde#readme&quot;&gt;Head to the readme&lt;/a&gt; to learn more.&lt;/p&gt;

&lt;h3 id=&quot;browser-support&quot;&gt;Browser support&lt;/h3&gt;

&lt;p&gt;Hyde is by preference a forward-thinking project. In addition to the latest versions of Chrome, Safari (mobile and desktop), and Firefox, it is only compatible with Internet Explorer 9 and above.&lt;/p&gt;

&lt;h3 id=&quot;download&quot;&gt;Download&lt;/h3&gt;

&lt;p&gt;Hyde is developed on and hosted with GitHub. Head to the &lt;a href=&quot;https://github.com/poole/hyde&quot;&gt;GitHub repository&lt;/a&gt; for downloads, bug reports, and features requests.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>What's Jekyll?</title>
   <link href="http://slapula.github.io/2012/02/06/whats-jekyll/"/>
   <updated>2012-02-06T00:00:00-06:00</updated>
   <id>http://slapula.github.io/2012/02/06/whats-jekyll</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; is a static site generator, an open-source tool for creating simple yet powerful websites of all shapes and sizes. From &lt;a href=&quot;https://github.com/mojombo/jekyll/blob/master/README.markdown&quot;&gt;the project’s readme&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jekyll is a simple, blog aware, static site generator. It takes a template directory […] and spits out a complete, static website suitable for serving with Apache or your favorite web server. This is also the engine behind GitHub Pages, which you can use to host your project’s page or blog right here from GitHub.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It’s an immensely useful tool and one we encourage you to use here with Hyde.&lt;/p&gt;

&lt;p&gt;Find out more by &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;visiting the project on GitHub&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 

</feed>
